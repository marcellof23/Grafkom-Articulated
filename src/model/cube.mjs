// Now create an array of positions for the cube.

function generateCubeVertice(modelGL) {
  var q1 = 0;
  var q2 = 1;
  var q3 = 2;
  var q4 = 3;
  for (var i = 0; i < CubeVertices / cubeFace; i++) {
    quad(q1 + 4 * i, q2 + 4 * i, q3 + 4 * i, q4 + 4 * i);
    for (var k = 0; k < 6; k++) {
      var randomColors = [colorRgb.r, colorRgb.g, colorRgb.b, 1];
      for (var j = 0; j < 4; j++) {
        modelGL.cubeColors.push(randomColors[j]);
      }
    }
  }
  modelGL.cubeNormals = getNormals(positions);
}

// prettier-ignore
const positions = [
  // Front face
  -1.0, -1.0,  1.0,
   1.0, -1.0,  1.0,
   1.0,  1.0,  1.0,
  -1.0,  1.0,  1.0,

  // Back face
  -1.0, -1.0, -1.0,
  -1.0,  1.0, -1.0,
   1.0,  1.0, -1.0,
   1.0, -1.0, -1.0,

  // Top face
  -1.0,  1.0, -1.0,
  -1.0,  1.0,  1.0,
   1.0,  1.0,  1.0,
   1.0,  1.0, -1.0,

  // Bottom face
  -1.0, -1.0, -1.0,
   1.0, -1.0, -1.0,
   1.0, -1.0,  1.0,
  -1.0, -1.0,  1.0,

  // Right face
   1.0, -1.0, -1.0,
   1.0,  1.0, -1.0,
   1.0,  1.0,  1.0,
   1.0, -1.0,  1.0,

  // Left face
  -1.0, -1.0, -1.0,
  -1.0, -1.0,  1.0,
  -1.0,  1.0,  1.0,
  -1.0,  1.0, -1.0,

  // Second block 

  // Front face
  -0.95, -0.95,  0.95,
   0.95, -0.95,  0.95,
   0.95,  0.95,  0.95,
  -0.95,  0.95,  0.95,

  // Back face
  -0.95, -0.95, -0.95,
  -0.95,  0.95, -0.95,
   0.95,  0.95, -0.95,
   0.95, -0.95, -0.95,

  // Top face
  -0.95,  0.95, -0.95,
  -0.95,  0.95,  0.95,
   0.95,  0.95,  0.95,
   0.95,  0.95, -0.95,

  // Bottom face
  -0.95, -0.95, -0.95,
   0.95, -0.95, -0.95,
   0.95, -0.95,  0.95,
  -0.95, -0.95,  0.95,

  // Right face
   0.95, -0.95, -0.95,
   0.95,  0.95, -0.95,
   0.95,  0.95,  0.95,
   0.95, -0.95,  0.95,

  // Left face
  -0.95, -0.95, -0.95,
  -0.95, -0.95,  0.95,
  -0.95,  0.95,  0.95,
  -0.95,  0.95, -0.95,

  // Third block 

    // Front face
    0.6, 0.6,  0.6,
    0.6, 0.6,  0.6,
    0.6,  0.6,  0.6,
   0.6,  0.6,  0.6,
 
   // Back face
   0.6, 0.6, 0.6,
   0.6,  0.6, 0.6,
    0.6,  0.6, 0.6,
    0.6, 0.6, 0.6,
 
   // Top face
   0.6,  0.6, 0.6,
   0.6,  0.6,  0.6,
    0.6,  0.6,  0.6,
    0.6,  0.6, 0.6,
 
   // Bottom face
   0.6, 0.6, 0.6,
    0.6, 0.6, 0.6,
    0.6, 0.6,  0.6,
   0.6, 0.6,  0.6,
 
   // Right face
    0.6, 0.6, 0.6,
    0.6,  0.6, 0.6,
    0.6,  0.6,  0.6,
    0.6, 0.6,  0.6,
 
   // Left face
   0.6, 0.6, 0.6,
   0.6, 0.6,  0.6,
   0.6,  0.6,  0.6,
   0.6,  0.6, 0.6,
];

positions = positions.map((x) => x * 0.3);
